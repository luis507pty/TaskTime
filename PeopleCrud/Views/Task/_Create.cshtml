@model  PeopleCrud.Models.TaskViewValidation

<h3 class="text-center text-white"><strong>Crear nueva tarea</strong></h3>

@using (Html.BeginForm("Create", "Task", FormMethod.Post, htmlAttributes: new { id = "form-create" }))
{
 
    <div id="token">@Html.AntiForgeryToken()</div> 

    <div class="d-flex justify-content-center">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
            <div class="col-12">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
            <div class="col-12">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="btn-create" type="button" onclick="Create()" value="Guardar" class="btn btn-block btn-lg btn-yellow card-radius text-dark" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
